[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "myvenv/lib/python3.12/site-packages/numpy/random/LICENSE.html",
    "href": "myvenv/lib/python3.12/site-packages/numpy/random/LICENSE.html",
    "title": "NCSA Open Source License",
    "section": "",
    "text": "This software is dual-licensed under the The University of Illinois/NCSA Open Source License (NCSA) and The 3-Clause BSD License\n\nNCSA Open Source License\nCopyright (c) 2019 Kevin Sheppard. All rights reserved.\nDeveloped by: Kevin Sheppard (kevin.sheppard@economics.ox.ac.uk, kevin.k.sheppard@gmail.com) http://www.kevinsheppard.com\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal with the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimers.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimers in the documentation and/or other materials provided with the distribution.\nNeither the names of Kevin Sheppard, nor the names of any contributors may be used to endorse or promote products derived from this Software without specific prior written permission.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.\n\n\n3-Clause BSD License\nCopyright (c) 2019 Kevin Sheppard. All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nComponents\nMany parts of this module have been derived from original sources, often the algorithm’s designer. Component licenses are located with the component code."
  },
  {
    "objectID": "myvenv/lib/python3.12/site-packages/soupsieve-2.6.dist-info/licenses/LICENSE.html",
    "href": "myvenv/lib/python3.12/site-packages/soupsieve-2.6.dist-info/licenses/LICENSE.html",
    "title": "Fintech_533_Project_Zhe",
    "section": "",
    "text": "MIT License\nCopyright (c) 2018 - 2024 Isaac Muse isaacmuse@gmail.com\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "myvenv/lib/python3.12/site-packages/httpcore-1.0.8.dist-info/licenses/LICENSE.html",
    "href": "myvenv/lib/python3.12/site-packages/httpcore-1.0.8.dist-info/licenses/LICENSE.html",
    "title": "Fintech_533_Project_Zhe",
    "section": "",
    "text": "Copyright © 2020, Encode OSS Ltd. All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "test_pandas.html",
    "href": "test_pandas.html",
    "title": "Pandas Test",
    "section": "",
    "text": "This is a simple test to verify if pandas can read the CSV files from the source directory.\n\nimport pandas as pd\n\n# Test if pandas is working\nprint(\"Pandas version:\", pd.__version__)\n\n# Try to read the blotter.csv file\ntry:\n    blotter = pd.read_csv('source/blotter.csv')\n    print(\"\\nSuccessfully read blotter.csv!\")\n    print(f\"Shape: {blotter.shape}\")\n    print(\"\\nFirst 5 rows:\")\n    print(blotter.head())\nexcept Exception as e:\n    print(f\"Error reading blotter.csv: {e}\")\n\n# Try to read the ledger.csv file\ntry:\n    ledger = pd.read_csv('source/ledger.csv')\n    print(\"\\nSuccessfully read ledger.csv!\")\n    print(f\"Shape: {ledger.shape}\")\n    print(\"\\nFirst 5 rows:\")\n    print(ledger.head())\nexcept Exception as e:\n    print(f\"Error reading ledger.csv: {e}\")\n\nPandas version: 2.2.3\n\nSuccessfully read blotter.csv!\nShape: (412, 5)\n\nFirst 5 rows:\n             timestamp    action     price  profit_percent    btc_qty\n0  2025-01-03 11:30:00    buy in  96800.44        0.000000  10.330532\n1  2025-01-03 23:30:00  sold out  98110.35        1.353207   0.000000\n2  2025-01-04 03:45:00    buy in  98255.71        1.353207  10.177526\n3  2025-01-04 04:30:00  sold out  98000.65       -0.259588   0.000000\n4  2025-01-04 05:45:00    buy in  98091.31       -0.259588  10.194583\n\nSuccessfully read ledger.csv!\nShape: (412, 5)\n\nFirst 5 rows:\n             timestamp        cash  btc_holding     price  market_value\n0  2025-01-03 11:30:00        0.00    10.330532  96800.44    1000000.00\n1  2025-01-03 23:30:00  1013532.07     0.000000  98110.35    1013532.07\n2  2025-01-04 03:45:00        0.00    10.315249  98255.71    1013532.07\n3  2025-01-04 04:30:00  1010901.06     0.000000  98000.65    1010901.06\n4  2025-01-04 05:45:00        0.00    10.305715  98091.31    1010901.06"
  },
  {
    "objectID": "myvenv/lib/python3.12/site-packages/idna-3.10.dist-info/LICENSE.html",
    "href": "myvenv/lib/python3.12/site-packages/idna-3.10.dist-info/LICENSE.html",
    "title": "Fintech_533_Project_Zhe",
    "section": "",
    "text": "BSD 3-Clause License\nCopyright (c) 2013-2024, Kim Davies and contributors. All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "myvenv/lib/python3.12/site-packages/pyzmq-26.4.0.dist-info/licenses/LICENSE.html",
    "href": "myvenv/lib/python3.12/site-packages/pyzmq-26.4.0.dist-info/licenses/LICENSE.html",
    "title": "Fintech_533_Project_Zhe",
    "section": "",
    "text": "BSD 3-Clause License\nCopyright (c) 2009-2012, Brian Granger, Min Ragan-Kelley\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "myvenv/lib/python3.12/site-packages/httpx-0.28.1.dist-info/licenses/LICENSE.html",
    "href": "myvenv/lib/python3.12/site-packages/httpx-0.28.1.dist-info/licenses/LICENSE.html",
    "title": "Fintech_533_Project_Zhe",
    "section": "",
    "text": "Copyright © 2019, Encode OSS Ltd. All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Candlestick Pattern Recognition Enhanced MACD-ATR Strategy for Cryptocurrency Trading",
    "section": "",
    "text": "Authors: Zhe Niu (M.S. FinTech), Haocheng Ni (M.S. ECE), Chenyuan Lei (M.S. ECE) – Duke University\n▶️ \n  Watch our project presentation on YouTube"
  },
  {
    "objectID": "index.html#candlestick-pattern-system-for-market-trend-recognition",
    "href": "index.html#candlestick-pattern-system-for-market-trend-recognition",
    "title": "Candlestick Pattern Recognition Enhanced MACD-ATR Strategy for Cryptocurrency Trading",
    "section": "Candlestick Pattern System for Market Trend Recognition",
    "text": "Candlestick Pattern System for Market Trend Recognition\nUnderstanding and classifying Japanese candlestick patterns is critical for interpreting trader sentiment and anticipating future price movements. The chart below presents a comprehensive taxonomy of bullish, bearish, and neutral candlestick configurations widely used in technical analysis. These patterns serve as visual signals for trend reversals and continuations in volatile markets like cryptocurrency.\nRecent research by Mersal et al. (2025) demonstrates that integrating 61 distinct candlestick patterns with CNN-based classification systems can drastically enhance the precision of market trend prediction. Their work applies a sliding window segmentation and TA-Lib pattern recognition to extract structured features from OHLC charts, followed by CNN training to classify bullish/bearish trends. Their approach achieved up to 99.3% accuracy, far exceeding traditional strategies.\nThis strategy draws inspiration from their methodology by using candlestick chart windows labeled with directional trends, validated with moving averages and additional technical indicators. These patterns—such as the Morning Star, Engulfing, Doji, and Shooting Star—provide reliable inputs for deep learning models, enabling the detection of microstructure signals across 15-minute intervals.\n\nReference: Mersal, E.R., Karaoğlan, K.M., Kutucu, H. (2025). Enhancing market trend prediction using convolutional neural networks on Japanese candlestick patterns. PeerJ Comp. Sci."
  },
  {
    "objectID": "index.html#core-strategy-concepts",
    "href": "index.html#core-strategy-concepts",
    "title": "Candlestick Pattern Recognition Enhanced MACD-ATR Strategy for Cryptocurrency Trading",
    "section": "Core Strategy Concepts",
    "text": "Core Strategy Concepts\nOur strategy is based on the following key elements:\n\nMACD Trend Signals: Using MACD histogram and signal line crossovers to confirm trend changes\nEMA Price Position: Price location relative to EMA30 to determine overall trend direction\nATR Dynamic Stop-Loss: Adaptive adjustment of stop-loss levels based on market volatility\nVisual Pattern Recognition: Using CNN deep learning models to identify candlestick patterns\nSignal Confirmation Mechanism: Requiring multiple consecutive signals before executing trades to reduce false breakouts"
  },
  {
    "objectID": "index.html#trading-process-breakdown",
    "href": "index.html#trading-process-breakdown",
    "title": "Candlestick Pattern Recognition Enhanced MACD-ATR Strategy for Cryptocurrency Trading",
    "section": "Trading Process Breakdown",
    "text": "Trading Process Breakdown\n\nStep 1: Entry Signal\n\nMACD histogram turns positive (uptrend)\nPrice is above the EMA30 moving average\nCNN model predicts an “uptrend”\nAt least 2 consecutive confirmation signals\nWhen conditions are met, buy at the current price\n\n\n\nStep 2: Stop-Loss Setting\n\nInitial stop-loss = Current price - (3.2 × ATR value)\nAs price increases, stop-loss level tracks upward (trailing stop)\n\n\n\nStep 3: Exit Signal\n\nMACD histogram turns negative (downtrend)\nPrice falls below EMA30\nCNN model predicts “downtrend”\nAt least 2 consecutive confirmations Or: Price hits trailing stop-loss level\n\n\n\nRisk Management Rules\n\nInitial capital: $1,000,000 USD\nUse all capital per trade\nTrailing stops to lock in profit\nConfirm multiple signals before executing\n\n\n\nCandlestick Pattern Classification with CNN\nThis project uses CNNs to classify candlestick chart patterns into bullish or bearish trends, automating the detection of key reversal signals in BTC/USDT trading. Over 60 TA-Lib functions are applied to extract meaningful windows, which are converted into chart images with SMA overlays and trend labels.\nThe model learns visual features through stacked layers and achieves a test accuracy of 99.3%."
  },
  {
    "objectID": "index.html#trade-entry",
    "href": "index.html#trade-entry",
    "title": "Candlestick Pattern Recognition Enhanced MACD-ATR Strategy for Cryptocurrency Trading",
    "section": "Trade Entry",
    "text": "Trade Entry\nAt 15:00 UTC on March 12, 2025, the MACD histogram shifts from negative to positive territory, suggesting the early stage of an uptrend. At the same time, the price closes decisively above the EMA30, further validating bullish momentum. Meanwhile, our CNN-based pattern classifier identifies a Morning Star formation—an established bullish reversal signal—within the most recent 15-minute candle window.\nTo minimize false entries, our strategy requires two consecutive CNN-confirmed bullish signals. Once the second confirmation occurs at 15:15 UTC, all entry conditions are satisfied:\n\nMACD histogram &gt; 0\nPrice &gt; EMA30\nCNN model predicts bullish pattern\n2 consecutive confirmations\n\nThus, a long position is opened at 15:15 UTC at a price of $66,240.78. The strategy allocates 100% of capital ($1,000,000) into the trade."
  },
  {
    "objectID": "index.html#stop-loss-protection",
    "href": "index.html#stop-loss-protection",
    "title": "Candlestick Pattern Recognition Enhanced MACD-ATR Strategy for Cryptocurrency Trading",
    "section": "Stop-Loss Protection",
    "text": "Stop-Loss Protection\nUpon entry, the Average True Range (ATR14) is measured at 157.12. The initial stop-loss is calculated as:\n[ = 66,240.78 - (3.2 ) = 65,737.97 ]\nThis trailing stop-loss will dynamically adjust upward as the trade progresses, allowing profits to be locked in while capping downside exposure."
  },
  {
    "objectID": "index.html#trade-exit",
    "href": "index.html#trade-exit",
    "title": "Candlestick Pattern Recognition Enhanced MACD-ATR Strategy for Cryptocurrency Trading",
    "section": "Trade Exit",
    "text": "Trade Exit\nRoughly 90 minutes later, at 16:45 UTC, the MACD histogram turns negative and the CNN classifier detects a Shooting Star—a bearish reversal pattern. The price also begins to drift toward the EMA30 line.\nAt 17:00 UTC, the second consecutive bearish CNN signal is confirmed. All exit conditions are now triggered:\n\nMACD histogram &lt; 0\nPrice trending below EMA30\nCNN model signals bearish pattern\n2 consecutive confirmations\n\nThe strategy closes the position at $66,809.87, locking in a +0.86% gain, or +$8,609.09 in absolute USD terms."
  },
  {
    "objectID": "index.html#summary-of-trade-dynamics",
    "href": "index.html#summary-of-trade-dynamics",
    "title": "Candlestick Pattern Recognition Enhanced MACD-ATR Strategy for Cryptocurrency Trading",
    "section": "Summary of Trade Dynamics",
    "text": "Summary of Trade Dynamics\n\n\n\n\n\n\n\n\n\n\nTime (UTC)\nEvent\nIndicator\nAction\nPrice\n\n\n\n\n15:00\nMACD turns positive\nMACD\nEntry signal\n—\n\n\n15:15\nMorning Star confirmed twice\nCNN + EMA + MACD\nBuy\n$66,240.78\n\n\n17:00\nShooting Star confirmed\nCNN + MACD + EMA\nSell\n$66,809.87\n\n\n\nThis trade illustrates how deep learning-enhanced visual signals work synergistically with traditional indicators to identify profitable opportunities and manage risk. The hybrid approach enables faster reaction to microstructure shifts while preserving robustness through confirmation and volatility-aware exits."
  }
]