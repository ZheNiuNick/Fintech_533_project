[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "myvenv/lib/python3.12/site-packages/numpy/random/LICENSE.html",
    "href": "myvenv/lib/python3.12/site-packages/numpy/random/LICENSE.html",
    "title": "NCSA Open Source License",
    "section": "",
    "text": "This software is dual-licensed under the The University of Illinois/NCSA Open Source License (NCSA) and The 3-Clause BSD License\n\nNCSA Open Source License\nCopyright (c) 2019 Kevin Sheppard. All rights reserved.\nDeveloped by: Kevin Sheppard (kevin.sheppard@economics.ox.ac.uk, kevin.k.sheppard@gmail.com) http://www.kevinsheppard.com\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal with the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimers.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimers in the documentation and/or other materials provided with the distribution.\nNeither the names of Kevin Sheppard, nor the names of any contributors may be used to endorse or promote products derived from this Software without specific prior written permission.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.\n\n\n3-Clause BSD License\nCopyright (c) 2019 Kevin Sheppard. All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nComponents\nMany parts of this module have been derived from original sources, often the algorithm’s designer. Component licenses are located with the component code."
  },
  {
    "objectID": "myvenv/lib/python3.12/site-packages/soupsieve-2.6.dist-info/licenses/LICENSE.html",
    "href": "myvenv/lib/python3.12/site-packages/soupsieve-2.6.dist-info/licenses/LICENSE.html",
    "title": "Fintech_533_Project_Zhe",
    "section": "",
    "text": "MIT License\nCopyright (c) 2018 - 2024 Isaac Muse isaacmuse@gmail.com\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  {
    "objectID": "myvenv/lib/python3.12/site-packages/httpcore-1.0.8.dist-info/licenses/LICENSE.html",
    "href": "myvenv/lib/python3.12/site-packages/httpcore-1.0.8.dist-info/licenses/LICENSE.html",
    "title": "Fintech_533_Project_Zhe",
    "section": "",
    "text": "Copyright © 2020, Encode OSS Ltd. All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "test_pandas.html",
    "href": "test_pandas.html",
    "title": "Pandas Test",
    "section": "",
    "text": "This is a simple test to verify if pandas can read the CSV files from the source directory.\n\nimport pandas as pd\n\n# Test if pandas is working\nprint(\"Pandas version:\", pd.__version__)\n\n# Try to read the blotter.csv file\ntry:\n    blotter = pd.read_csv('source/blotter.csv')\n    print(\"\\nSuccessfully read blotter.csv!\")\n    print(f\"Shape: {blotter.shape}\")\n    print(\"\\nFirst 5 rows:\")\n    print(blotter.head())\nexcept Exception as e:\n    print(f\"Error reading blotter.csv: {e}\")\n\n# Try to read the ledger.csv file\ntry:\n    ledger = pd.read_csv('source/ledger.csv')\n    print(\"\\nSuccessfully read ledger.csv!\")\n    print(f\"Shape: {ledger.shape}\")\n    print(\"\\nFirst 5 rows:\")\n    print(ledger.head())\nexcept Exception as e:\n    print(f\"Error reading ledger.csv: {e}\")\n\nPandas version: 2.2.3\n\nSuccessfully read blotter.csv!\nShape: (412, 5)\n\nFirst 5 rows:\n             timestamp    action     price  profit_percent    btc_qty\n0  2025-01-03 11:30:00    buy in  96800.44        0.000000  10.330532\n1  2025-01-03 23:30:00  sold out  98110.35        1.353207   0.000000\n2  2025-01-04 03:45:00    buy in  98255.71        1.353207  10.177526\n3  2025-01-04 04:30:00  sold out  98000.65       -0.259588   0.000000\n4  2025-01-04 05:45:00    buy in  98091.31       -0.259588  10.194583\n\nSuccessfully read ledger.csv!\nShape: (412, 5)\n\nFirst 5 rows:\n             timestamp        cash  btc_holding     price  market_value\n0  2025-01-03 11:30:00        0.00    10.330532  96800.44    1000000.00\n1  2025-01-03 23:30:00  1013532.07     0.000000  98110.35    1013532.07\n2  2025-01-04 03:45:00        0.00    10.315249  98255.71    1013532.07\n3  2025-01-04 04:30:00  1010901.06     0.000000  98000.65    1010901.06\n4  2025-01-04 05:45:00        0.00    10.305715  98091.31    1010901.06"
  },
  {
    "objectID": "myvenv/lib/python3.12/site-packages/idna-3.10.dist-info/LICENSE.html",
    "href": "myvenv/lib/python3.12/site-packages/idna-3.10.dist-info/LICENSE.html",
    "title": "Fintech_533_Project_Zhe",
    "section": "",
    "text": "BSD 3-Clause License\nCopyright (c) 2013-2024, Kim Davies and contributors. All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "myvenv/lib/python3.12/site-packages/pyzmq-26.4.0.dist-info/licenses/LICENSE.html",
    "href": "myvenv/lib/python3.12/site-packages/pyzmq-26.4.0.dist-info/licenses/LICENSE.html",
    "title": "Fintech_533_Project_Zhe",
    "section": "",
    "text": "BSD 3-Clause License\nCopyright (c) 2009-2012, Brian Granger, Min Ragan-Kelley\nAll rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "myvenv/lib/python3.12/site-packages/httpx-0.28.1.dist-info/licenses/LICENSE.html",
    "href": "myvenv/lib/python3.12/site-packages/httpx-0.28.1.dist-info/licenses/LICENSE.html",
    "title": "Fintech_533_Project_Zhe",
    "section": "",
    "text": "Copyright © 2019, Encode OSS Ltd. All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nNeither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MACD+ATR Balanced Strategy for Cryptocurrency Trading",
    "section": "",
    "text": "This project presents a MACD indicator and ATR dynamic stop-loss balanced trading strategy that captures trend reversal signals in the cryptocurrency market, combined with CNN deep learning for chart pattern recognition to achieve profitable swing trading. The strategy integrates technical indicators with machine learning, specifically optimized for the high volatility characteristics of the BTC/USDT market.\n\n\nOur strategy is based on the following key elements:\n\nMACD Trend Signals: Using MACD histogram and signal line crossovers to confirm trend changes\nEMA Price Position: Price location relative to EMA30 to determine overall trend direction\nATR Dynamic Stop-Loss: Adaptive adjustment of stop-loss levels based on market volatility\nVisual Pattern Recognition: Using CNN deep learning models to identify candlestick patterns\nSignal Confirmation Mechanism: Requiring multiple consecutive signals before executing trades to reduce false breakouts\n\n\n\n\n\n\n\nMACD histogram turns positive (uptrend)\nPrice is above the EMA30 moving average\nCNN model predicts an “uptrend”\nAt least 2 consecutive confirmation signals ✅ When conditions are met, buy at the current price\n\n\n\n\n\nInitial stop-loss = Current price - (3.2 × ATR value)\nAs price increases, stop-loss level tracks upward (trailing stop)\n\n\n\n\n\nMACD histogram turns negative (downtrend)\nPrice falls below EMA30\nCNN model predicts “downtrend”\nAt least 2 consecutive confirmations Or: Price hits trailing stop-loss level\n\n\n\n\n\nInitial capital: $1,000,000 USD\nUse all capital per trade\nTrailing stops to lock in profit\nConfirm multiple signals before executing\n\n\n\n\nThis project uses CNNs to classify candlestick chart patterns into bullish or bearish trends, automating the detection of key reversal signals in BTC/USDT trading. Over 60 TA-Lib functions are applied to extract meaningful windows, which are converted into chart images with SMA overlays and trend labels.\nThe model learns visual features through stacked layers and achieves a test accuracy of 99.6%."
  },
  {
    "objectID": "index.html#core-strategy-concepts",
    "href": "index.html#core-strategy-concepts",
    "title": "MACD+ATR Balanced Strategy for Cryptocurrency Trading",
    "section": "",
    "text": "Our strategy is based on the following key elements:\n\nMACD Trend Signals: Using MACD histogram and signal line crossovers to confirm trend changes\nEMA Price Position: Price location relative to EMA30 to determine overall trend direction\nATR Dynamic Stop-Loss: Adaptive adjustment of stop-loss levels based on market volatility\nVisual Pattern Recognition: Using CNN deep learning models to identify candlestick patterns\nSignal Confirmation Mechanism: Requiring multiple consecutive signals before executing trades to reduce false breakouts"
  },
  {
    "objectID": "index.html#trading-process-breakdown",
    "href": "index.html#trading-process-breakdown",
    "title": "MACD+ATR Balanced Strategy for Cryptocurrency Trading",
    "section": "",
    "text": "MACD histogram turns positive (uptrend)\nPrice is above the EMA30 moving average\nCNN model predicts an “uptrend”\nAt least 2 consecutive confirmation signals ✅ When conditions are met, buy at the current price\n\n\n\n\n\nInitial stop-loss = Current price - (3.2 × ATR value)\nAs price increases, stop-loss level tracks upward (trailing stop)\n\n\n\n\n\nMACD histogram turns negative (downtrend)\nPrice falls below EMA30\nCNN model predicts “downtrend”\nAt least 2 consecutive confirmations Or: Price hits trailing stop-loss level\n\n\n\n\n\nInitial capital: $1,000,000 USD\nUse all capital per trade\nTrailing stops to lock in profit\nConfirm multiple signals before executing\n\n\n\n\nThis project uses CNNs to classify candlestick chart patterns into bullish or bearish trends, automating the detection of key reversal signals in BTC/USDT trading. Over 60 TA-Lib functions are applied to extract meaningful windows, which are converted into chart images with SMA overlays and trend labels.\nThe model learns visual features through stacked layers and achieves a test accuracy of 99.6%."
  }
]